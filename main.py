import discord
import os
import asyncio
import re
import requests
import config
from discord import app_commands
from discord.ext import commands, tasks
from youtube_search import YoutubeSearch
from pytube import YouTube
from PIL import Image
from io import BytesIO

def clean_filename(filename):
    cleaned_filename = re.sub(r'[\\/:"*?<>|]', '_', filename)
    return cleaned_filename

bot = commands.Bot(command_prefix="!", intents=discord.Intents.all())

@bot.event
async def on_ready():
    await bot.change_presence(activity=discord.Game(name="music"))
    print("Bot –∑–∞–ø—É—â–µ–Ω.")
    try:
        synced = await bot.tree.sync()
        print(f"Synced {len(synced)} command(s)")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥: {e}")

class GuildMusicPlayer:
    def __init__(self, voice_client, yt, stream):
        self.voice_client = voice_client
        self.yt = yt
        self.stream = stream
        self.ffmpeg_options = {
            'before_options': '-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5',
            'options': '-vn -af aresample=async=1'
        }
        self.loop = False
        self.message = None  # –•—Ä–∞–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
        self.update_view_task = None  # –ó–∞–¥–∞—á–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫

    def play(self):
        self.voice_client.play(discord.FFmpegPCMAudio(self.stream.url, **self.ffmpeg_options), after=lambda e: asyncio.run_coroutine_threadsafe(self.after_playback(), bot.loop))

    async def after_playback(self):
        if self.loop:
            self.play()
        else:
            if self.voice_client:
                await self.voice_client.disconnect()
            if self.message:
                await self.message.edit(view=None)  # –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
            if self.update_view_task:
                self.update_view_task.cancel()  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫

    async def update_view(self):
        while True:
            if self.message:
                await self.message.edit(view=MusicView(self))  # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
            await asyncio.sleep(150)  # –ñ–¥–µ–º 10 –º–∏–Ω—É—Ç
            print("–ö–Ω–æ–ø–∫–∞ re-1")

class MusicView(discord.ui.View):
    def __init__(self, player):
        super().__init__()
        self.player = player

    @discord.ui.button(emoji="üîÅ", style=discord.ButtonStyle.blurple)
    async def repeat(self, interaction: discord.Interaction, button: discord.ui.Button):
        self.player.loop = not self.player.loop
        await interaction.response.defer()
        await interaction.followup.send(f"–†–µ–∂–∏–º –ø–æ–≤—Ç–æ—Ä–∞ {'–≤–∫–ª—é—á–µ–Ω' if self.player.loop else '–≤—ã–∫–ª—é—á–µ–Ω'}.", ephemeral=True)

    @discord.ui.button(emoji="‚è∏Ô∏è", style=discord.ButtonStyle.blurple)
    async def pause(self, interaction: discord.Interaction, button: discord.ui.Button):
        if self.player.voice_client.is_playing():
            self.player.voice_client.pause()
        await interaction.response.defer()

    @discord.ui.button(emoji="‚ñ∂Ô∏è", style=discord.ButtonStyle.blurple)
    async def resume(self, interaction: discord.Interaction, button: discord.ui.Button):
        if self.player.voice_client.is_paused():
            self.player.voice_client.resume()
        await interaction.response.defer()

    @discord.ui.button(emoji="‚õî", style=discord.ButtonStyle.grey)
    async def stop(self, interaction: discord.Interaction, button: discord.ui.Button):
        voice_state = interaction.guild.get_member(interaction.user.id).voice
        if voice_state is None or voice_state.channel is None:
            await interaction.response.send_message("–í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
            return
        await interaction.response.defer()

        try:
            voice_client = discord.utils.get(bot.voice_clients, guild=interaction.guild)
            if voice_client and voice_client.is_playing():
                voice_client.stop()
                await interaction.followup.send("–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –º—É–∑—ã–∫–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.", ephemeral=True)
                await voice_client.disconnect()
            else:
                await interaction.followup.send("–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è.", ephemeral=True)
        except Exception as e:
            await interaction.followup.send(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}', ephemeral=True)

def resize_image(image_url, output_filename, max_height):
    response = requests.get(image_url)
    img = Image.open(BytesIO(response.content))

    # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    width, height = img.size

    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω –∏ –Ω–æ–≤—É—é —à–∏—Ä–∏–Ω—É
    aspect_ratio = width / height
    new_height = max_height
    new_width = int(aspect_ratio * new_height)

    # –ò–∑–º–µ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, —Å–æ—Ö—Ä–∞–Ω—è—è –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏
    img = img.resize((new_width, new_height), Image.LANCZOS)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —É–º–µ–Ω—å—à–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    img.save(output_filename)

@bot.tree.command(name="play", description='–ü–æ–∏—Å–∫ –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –º—É–∑—ã–∫–∏ –≤ –≥—Å –∫–∞–Ω–∞–ª–µ')
@app_commands.describe(–∑–∞–ø—Ä–æ—Å="–ü–æ–∏—Å–∫ –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –º—É–∑—ã–∫–∏ –≤ –≥—Å –∫–∞–Ω–∞–ª–µ")
async def play_music(interaction: discord.Interaction, –∑–∞–ø—Ä–æ—Å: str):
    voice_state = interaction.guild.get_member(interaction.user.id).voice
    if voice_state is None or voice_state.channel is None:
        await interaction.response.send_message("–í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        return

    await interaction.response.defer()

    voice_client = discord.utils.get(bot.voice_clients, guild=interaction.guild)
    if voice_client and voice_client.is_connected():
        await voice_client.disconnect()

    try:
        voice_client = await voice_state.channel.connect()

        if –∑–∞–ø—Ä–æ—Å.startswith("http"):
            video_url = –∑–∞–ø—Ä–æ—Å
        else:
            results = YoutubeSearch(–∑–∞–ø—Ä–æ—Å, max_results=1).to_dict()
            if not results:
                await interaction.followup.send("–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
                return
            video_url = "https://www.youtube.com" + results[0]['url_suffix']

        yt = YouTube(video_url)
        stream = yt.streams.filter(only_audio=True).first()

        # –°–æ–∑–¥–∞–Ω–∏–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (embed)
        spacer = '--' * 34
        embed = discord.Embed(title=yt.title, description=f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {yt.length // 60}:{yt.length % 60:02d}\n{spacer}", color=0x1E90FF)
        embed.set_footer(text=f"added by {interaction.user.display_name}")
        embed.set_thumbnail(url=yt.thumbnail_url)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º URL –ø—Ä–µ–≤—å—é-–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

        player = GuildMusicPlayer(voice_client, yt, stream)
        player.play()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ player
        player.message = await interaction.followup.send(embed=embed, view=MusicView(player))

        # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
        player.update_view_task = asyncio.create_task(player.update_view())
        
    except Exception as e:
        await interaction.followup.send(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}', ephemeral=True)

@bot.tree.command(name="stop", description='–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –º—É–∑—ã–∫–∏ –∏ –æ—á–∏—Å—Ç–∏—Ç—å –æ—á–µ—Ä–µ–¥—å')
async def stop_playing(interaction: discord.Interaction):
    voice_state = interaction.guild.get_member(interaction.user.id).voice
    if voice_state is None or voice_state.channel is None:
        await interaction.response.send_message("–í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        return
    await interaction.response.defer()

    try:
        voice_client = discord.utils.get(bot.voice_clients, guild=interaction.guild)
        if voice_client and voice_client.is_playing():
            voice_client.stop()
            await interaction.followup.send("–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –º—É–∑—ã–∫–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.", ephemeral=True)
            await voice_client.disconnect()
        else:
            await interaction.followup.send("–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è.", ephemeral=True)
    except Exception as e:
        await interaction.followup.send(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}', ephemeral=True)

bot.run(config.token)
